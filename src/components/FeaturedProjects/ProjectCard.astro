---
import Link from './Link.astro'
import { urlFor } from '../../util/imageBuilder'

export interface Props {
    name: string
    excerpt: string
    image: string
    tags: string[]
    gitHubUrl: string
    liveSiteUrl: string
}

const { name, excerpt, image, tags, gitHubUrl, liveSiteUrl } = Astro.props
const projectImage = urlFor(image).url()
---

<div class="flip-card h-[400px] w-[400px] md:h-[235px] md:w-[375px]">
    <div class="flip-card-inner">
        <div class="flip-card-front rounded shadow-lg shadow-black/25">
            <img
                src={projectImage}
                width={375}
                height={235}
                alt="Avatar"
                loading={'lazy'}
                class="w-[400px] md:w-[375px]"
            />
        </div>
        <div
            class="flip-card-back flex cursor-default flex-col justify-start bg-bgDark shadow-md shadow-black/25 dark:bg-gray-900"
        >
            <div class="mt-4">
                <span class="text-lg text-purpleDark">{name}</span>
                <p class="mt-2 px-4 text-lg text-textDark">
                    {excerpt}
                </p>
            </div>
            <div class="mb-4 flex flex-wrap justify-center gap-1">
                <div class="flex w-full justify-center gap-2 px-12 pb-2">
                    <Link url={gitHubUrl} icon="github" name="code" />
                    <Link
                        url={liveSiteUrl}
                        icon="open-outline"
                        name="live site"
                    />
                </div>
                {
                    tags.map((tag, index) => (
                        <span
                            class={`inline-flex items-center rounded px-2.5 py-0.5 text-xs
                                    ${
                                        index == 0
                                            ? 'bg-green-100  text-green-800'
                                            : index == 1
                                            ? 'bg-purple-100 text-purple-800'
                                            : 'bg-blue-100 text-blue-800'
                                    }
                                `}
                        >
                            {tag['name']}
                        </span>
                    ))
                }
            </div>
        </div>
    </div>
</div>

<style>
    .flip-card {
        background-color: transparent;
        height: 235px;
        perspective: 1000px;
    }

    .flip-card-inner {
        position: relative;
        width: 100%;
        height: 100%;
        text-align: center;
        transition: transform 0.9s;
        transform-style: preserve-3d;
    }

    .flip-card:hover .flip-card-inner {
        transform: rotateY(180deg);
        cursor: pointer;
    }

    .flip-card-front,
    .flip-card-back {
        position: absolute;
        display: flex;
        justify-content: space-between;
        width: 100%;
        height: 100%;
        -webkit-backface-visibility: hidden; /* Safari */
        backface-visibility: hidden;
    }

    .flip-card-front {
        background-color: #bbb;
        color: black;
    }

    .flip-card-back {
        transform: rotateY(180deg);
    }

    @media (prefers-reduced-motion) {
        .flip-card-inner {
            transition: none;
        }
        .flip-card {
            perspective: none;
        }
    }
</style>
